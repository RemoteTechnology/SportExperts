#!groovy
properties([disableConcurrentBuilds()])

pipeline {
    agent any
    options {
        timestamps()
    }

    environment {
        // Задаем переменные окружения
        SERVER_IP = '176.113.80.94'
        PROJECT_DIR = 'SportExperts'
    }

    stages {
        stage('Стягивание изменений') {
            steps {
                sh "ssh -o StrictHostKeyChecking=no root@${SERVER_IP} 'cd ${PROJECT_DIR} && git status && git pull'"
            }
        }
        stage('Сборка проекта') {
            steps {
                sh "ssh -o StrictHostKeyChecking=no root@${SERVER_IP} 'cd ${PROJECT_DIR} && docker-compose down && docker-compose up --build -d'"
            }
        }
        stage('Установка зависимостей') {
            steps {
                sh "ssh -o StrictHostKeyChecking=no root@${SERVER_IP} 'cd ${PROJECT_DIR} && docker-compose run php-fpm composer install && docker-compose run node install'"
            }
        }
        stage('Применение миграций') {
            steps {
                sh "ssh -o StrictHostKeyChecking=no root@${SERVER_IP} 'cd ${PROJECT_DIR} && docker-compose run php-fpm php artisan migrate'"
            }
        }
        stage('Сборка фронтенда') {
                    steps {
                        sh "ssh -o StrictHostKeyChecking=no root@${SERVER_IP} 'cd ${PROJECT_DIR} && docker-compose run node run build'"
                    }
                }
//         stage('Очистка/Обновление кэша') {
//             steps {
//                 sh "ssh -o StrictHostKeyChecking=no root@${SERVER_IP} 'cd ${PROJECT_DIR} && docker-compose run php-fpm php artisan cache:clear && docker-compose run php-fpm php artisan optimize:clear'"
//                 sh "ssh -o StrictHostKeyChecking=no root@${SERVER_IP} 'cd ${PROJECT_DIR} && docker-compose run php-fpm php artisan app:cache-update-command'"
//             }
//         }
    }

    post {
        success {
            echo 'Развертывание из main прошло успешно!'
        }
        failure {
            echo 'Ошибка развёртывания!'
        }
    }
}