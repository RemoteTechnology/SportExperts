services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: ${NAME}_jenkins
    hostname: ${NAME}_jenkins
    profiles:
      - debug
    ports:
      - ${JENKINS_PORT}:8080
      - ${JENKINS_WEB_PORT}:5000
    volumes:
      - jenkins_home:${JENKINS_DATA}
      - ./app/rsa:/var/jenkins_home/.ssh
    networks:
      - jenkins-network

  jenkins-agent:
    image: jenkins/inbound-agent
    container_name: ${NAME}_jenkins-agent
    hostname: ${NAME}_jenkins-agent
    profiles:
      - debug
    environment:
      - JENKINS_URL=${JENKINS_URL}
      - JENKINS_AGENT_NAME=${JENKINS_AGENT_NAME}
      - JENKINS_AGENT_WORKDIR=${JENKINS_AGENT_WORKDIR}
      - JENKINS_SECRET=${JENKINS_SECRET}
    volumes:
      - agent_workdir:${JENKINS_AGENT_WORKDIR}
    depends_on:
      - jenkins
    networks:
      - jenkins-network

  nginx:
    container_name: ${NAME}_nginx
    hostname: ${NAME}_nginx
    restart: always
    ports:
      - ${HTTP_PORT}:80
    build:
      context: ${DOCKER_PATH}/nginx
      dockerfile: Dockerfile
    volumes:
      - ./${DOCKER_PATH}/${HTTP_LOCAL_CONFIG_PATH}:${HTTP_CONTAINER_CONFIG_PATH}:ro
      - ./${APP_LOCAL_PATH}:${APP_CONTAINER_PATH}

  postgres:
    container_name: ${NAME}_postgres
    hostname: ${NAME}_postgres
    restart: always
    ports:
      - ${POSTGRES_PORT}:5432
    build:
      context: ${DOCKER_PATH}/postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - .:/docker-entrypoint-initdb.d
      - v-db:${POSTGRES_DATA}

  mongodb:
    container_name: ${NAME}_mongodb
    hostname: ${NAME}_mongodb
    ports:
      - ${MONGO_PORT}:27017
    build:
      context: ${DOCKER_PATH}/mongo
      dockerfile: Dockerfile
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./data/mongo/:${MONGO_DATA}

  rabbitmq:
    container_name: ${NAME}_rabbitmq
    hostname: ${NAME}_rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}
    build:
      context: ${DOCKER_PATH}/rabbitmq
      dockerfile: Dockerfile
    ports:
      - ${RABBITMQ_PORT_CLIENT}:5672
      - ${RABBITMQ_PORT}:15672
    volumes:
      - ./${DOCKER_PATH}/${RABBITMQ_CONFIG_PATH}:/etc/rabbitmq/rabbitmq.conf:ro

  php-fpm:
    container_name: ${NAME}_php-fpm
    hostname: ${NAME}_php-fpm
    environment:
      docker: "true"
    extra_hosts:
      - ${PHP_FPM_EXTRA_HOST}
    build:
      context: ${DOCKER_PATH}/php-fpm
      dockerfile: Dockerfile
      args:
        - INSTALL_FAKETIME=false
        - INSTALL_LOCALES_ADDITIONAL=false
        - LOCALES_ADDITIONAL=${LOCALES_ADDITIONAL}
        - LOCALE=${LOCALE_DEFAULT}
        - TIMEZONE=${TIMEZONE_DEFAULT}
        - http_proxy
        - https_proxy
        - no_proxy
        - PUID=${PUID}
        - PGID=${PGID}
    env_file:
      - ${DOCKER_PATH}/php-fpm/xdebug.env
    volumes:
      - ./${APP_LOCAL_PATH}:${APP_CONTAINER_PATH}
      - ./${DOCKER_PATH}/php-fpm/php.ini:${PHP_FPM_CONFIG_PATH}:ro
    depends_on:
      - nginx
      - postgres
      - mongodb
      - rabbitmq

  node:
    container_name: ${NAME}_node
    hostname: ${NAME}_node
    environment:
      docker: "true"
    build:
      context: ${DOCKER_PATH}/node
      dockerfile: Dockerfile
    volumes:
      - ./${APP_LOCAL_PATH}:${APP_CONTAINER_PATH}
    depends_on:
      - php-fpm

networks:
  app:
  jenkins-network:
    driver: 'bridge'

volumes:
  v-db:
  jenkins_home:
  agent_workdir:
    driver: local